services:
  graphql:
    build: services/graphql
    container_name: graphql
    ports:
      - 5000:5000
    volumes:
      - ./services/graphql/package.json:/usr/src/app/package.json
      - ./services/graphql/package-lock.json:/usr/src/app/package-lock.json
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev

  sensor:
    build: services/sensor
    container_name: sensor
    depends_on:
      mongodb:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: measurements
      TZ: UTC
      MONGODB_URI: mongodb://mongodb:27017/sensordata
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - sensors-network

  mongodb:
    build: services/mongodb
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: sensordata
    volumes:
      - mongodb_data:/data/db
    networks:
      - sensors-network
      - app-network

  kafka:
    image: apache/kafka:latest
    hostname: kafka
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 30s
    networks:
      - sensors-network
      - app-network

  dashboard:
    build: services/dashboard
    container_name: dashboard
    ports:
      - 3000:3000
    depends_on:
      mongodb:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: measurements
      MONGODB_URI: mongodb://mongodb:27017/sensordata
      NODE_ENV: production
    volumes:
      - ./services/dashboard/app:/usr/src/app
      - ./services/graphql/package.json:/usr/src/app/package.json
      - ./services/graphql/package-lock.json:/usr/src/app/package-lock.json
      - /usr/src/app/node_modules
    networks:
      - app-network

networks:
  sensors-network:
    driver: bridge
  app-network:
    driver: bridge

volumes:
  mongodb_data: