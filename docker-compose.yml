services:
  sensor:
    image: python:3.9-slim
    container_name: air-quality-map-sensor
    depends_on:
      mongodb:
        condition: service_started
      kafka:
        condition: service_healthy
    env_file:
      - .env
    environment:
      TZ: Europe/Rome
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./services/sensor/app:/app
    networks:
      - sensors-network
    working_dir: /app
    command: sh -c "pip install --no-cache-dir -r requirements.txt && python sensor_simulation.py"

  mongodb:
    build: services/mongodb
    container_name: air-quality-map-mongodb
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: sensordata
    volumes:
      - mongodb_data:/data/db
    networks:
      - sensors-network
      - app-network

  kafka:
    image: apache/kafka:latest
    hostname: kafka
    container_name: air-quality-map-broker
    ports:
      - 9092:9092
    env_file:
      - .env.kafka
    healthcheck:
      test: ["CMD", "/opt/kafka/bin/kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 30s
    networks:
      - sensors-network
      - app-network

  dashboard:
    image: node:18-alpine
    container_name: air-quality-map-dashboard
    ports:
      - 5173:5173
    depends_on:
      mongodb:
        condition: service_started
      kafka:
        condition: service_healthy
    env_file:
      - .env
    environment:
      NODE_ENV: development
      VITE_SOCKET_SERVER_URL: http://localhost:3000
    volumes:
      - ./services/dashboard/app:/usr/src/app
    networks:
      - app-network
    working_dir: /usr/src/app
    command: sh -c "npm run dev"

  server:
    image: node:18-alpine
    container_name: air-quality-map-server
    ports:
      - 3000:3000
    depends_on:
      mongodb:
        condition: service_started
      kafka:
        condition: service_healthy
    env_file:
      - .env
    environment:
      NODE_ENV: development
      CORS_ORIGIN: http://localhost:5173
    volumes:
      - ./services/server/app:/usr/src/app
    networks:
      - app-network
    working_dir: /usr/src/app
    command: sh -c "npm run dev"

networks:
  sensors-network:
    driver: bridge
  app-network:
    driver: bridge

volumes:
  mongodb_data: