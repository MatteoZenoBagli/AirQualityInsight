services:
  graphql:
    build: services/graphql
    container_name: graphql
    ports:
      - 5000:5000
    volumes:
      - ./app:/usr/src/app
      - ./services/graphql/package.json:/usr/src/app/package.json
      - ./services/graphql/package-lock.json:/usr/src/app/package-lock.json
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=development
    command: npm run dev

  sensor:
    build: services/sensor
    container_name: sensor
    volumes:
      - ./data:/data
    depends_on:
      - mongodb
      - kafka
    environment:
      - TZ=UTC
      - MONGODB_URI=mongodb://mongodb:27017/sensordata
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    networks:
      - sensors-network

  mongodb:
    build: services/mongodb
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=sensordata
    volumes:
      - mongodb_data:/data/db
    networks:
      - sensors-network

  kafka:
    build: services/kafka
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - sensors-network

networks:
  sensors-network:
    driver: bridge

volumes:
  mongodb_data: